class Solution {
/* 피보나치 수에서 n은 1이상이기 때문에 배열 첫번째 원소는 0이 아닌 1이 들어가야 함을 주의!
44번째 피보나치 수만 봐도 int의 범위를 넘어가기 때문에 문제에서 1234567로 나눈 나머지를 구하라는 것은 int의 범위를 넘어가지 말라는 이야기. 
but, 해당 피보나치 수가 이미 int 범위를 넘긴 상태라 엉망진창이 된 상태일 것이고, 이것을 1234567로 나눈다고 한들 정확한 값을 구하는 것은 불가능하다. 따라서 (A + B) % C ≡ ( ( A % C ) + ( B % C) ) % C라는 성질을 이용해서 매번 계산 결과에 1234567으로 나눈 나머지를 대신 넣는 것으로 int 범위 내에 항상 값이 존재함을 보장할 수 있다.(질문하기 참고)*/
 
    public int solution(int n) {
        int answer = 0;
        int[] arr = new int[n];
        arr[0] = 1;
        for(int i = 1; i <= n-1; i++){
            if(i == 1){ // 두번째 배열에 1 넣어주기
                arr[1] = 1;
                continue;
            }
            arr[i] = arr[i-1]%1234567 + arr[i-2]%1234567;
        }
        return arr[n-1]%1234567;
    }
}